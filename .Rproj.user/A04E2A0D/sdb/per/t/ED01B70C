{
    "contents" : "\n# some functions for the unbiased estimator\nE1 = function(i, M) {\n  return ((n[i]*(n[i]-1))/((n[i]-2)*(n[i]+1))*(matrix.trace(M)^2-2/n[i]*matrix.trace(M%*%M)))\n}\n\nE2 = function(i, M) {\n  return ((n[i]-1)^2/((n[i]-2)*(n[i]+1))*(matrix.trace(M%*%M)-1/(n[i]-1)*matrix.trace(M)^2))\n}\n\nE3 = function(M_i, M_j) {\n  return (matrix.trace(M_i)*matrix.trace(M_j))\n}\nE4 = function(M_i,M_j) {\n  return (matrix.trace(M_i%*%M_j))\n}\n\n#######################################\n\n\nH1 = function(n, a, d, X, alpha){\n  \n  f=0\n  f0=0\n  crit=0\n  test=0\n  \n  # creating X_bar (list with a entries)\n  X_bar = c(colMeans(X[[1]]))\n  for(i in 2:a){\n    X_bar = c(X_bar,colMeans(X[[i]]))\n  }\n  X_bar = as.matrix(X_bar)\n  \n  J_d = (rep(1,d)%*%t(rep(1,d)))\n  D_a = diag(n)-1/sum(n)*n%*%t(n)\n  K_A = kronecker(D_a,J_d)\n  \n  V = list(J_d%*%var(X[[1]])%*%t(J_d),J_d%*%var(X[[2]])%*%t(J_d))\n  if(a>2){\n    for(i in 3:a){\n      V[[i]] = (J_d%*%var(X[[i]])%*%t(J_d))\n    }\n  }\n  \n  #################################################################################################\n  # f\n  f_1 = 0\n  f_2 = 0\n  \n  \n  \n  for(i in 1:a){\n    f_1 = f_1 + ((1-n[i]/sum(n))/d)^2*E1(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_1 = f_1 + 2*((1-n[i]/sum(n))/d)*((1-n[j]/sum(n))/d)*E3(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  for(i in 1:a){\n    f_2 = f_2 + ((1-n[i]/sum(n))/d)^2*E2(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_2 = f_2 + 2*(n[i]*n[j])/(d^2*sum(n)^2)*E4(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  f=f_1/f_2\n  \n  \n  ##################################################################################################\n  \n  \n  \n  #################################################################################################\n  # f0\n  f0_1 = f_1\n  f0_2 = 0\n  \n  for(i in 1:a){\n    f0_2 = f0_2 + ((1-n[i]/sum(n))/d)^2*1/(n[i]-1)*E2(i,V[[i]])\n  }\n  \n  f0=f0_1/f0_2\n  \n  ##################################################################################################\n  \n  # critical value\n  crit = qf(1-alpha,f,f0)\n  \n  # Test\n  \n  direct = direct.sum(1/n[1]*var(X[[1]]),1/n[2]*var(X[[2]]))\n  if(a>2){\n    for(i in 3:a) {\n      direct = direct.sum(direct, 1/n[i]*var(X[[i]]))\n    }\n  }\n  test = (t(X_bar)%*%K_A%*%X_bar)/matrix.trace(K_A%*%direct)\n \n  return (1-pf(test,f,f0))\n}\n\n# Hypothesis 1 ------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\nH2 = function(n, a, d, X, alpha){\n  \n  f=0\n  f0=0\n  crit=0\n  test=0\n  \n  # creating X_bar (list with a entries)\n  X_bar = c(colMeans(X[[1]]))\n  for(i in 2:a){\n    X_bar = c(X_bar,colMeans(X[[i]]))\n  }\n  X_bar = as.matrix(X_bar)\n  \n  J_a = (rep(1,a)%*%t(rep(1,a)))\n  P_d = diag(d) - 1/d*(rep(1,d)%*%t(rep(1,d)))\n  K_B = kronecker(J_a,P_d)\n  \n  V = list(P_d%*%var(X[[1]]),P_d%*%var(X[[2]]))\n  if(a>2){\n    for(i in 3:a){\n      V[[i]] = (P_d%*%var(X[[i]]))\n    }\n  }\n  \n  #################################################################################################\n  \n  # f\n  f_1 = 0\n  f_2 = 0\n  \n  for(i in 1:a){\n    f_1 = f_1 + (1/n[i])^2*E1(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_1 = f_1 + 2*(1/n[i])*(1/n[j])*E3(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  for(i in 1:a){\n    f_2 = f_2 + (1/n[i])^2*E2(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_2 = f_2 + 2*1/(n[i]*n[j])*E4(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  f=f_1/f_2\n  \n  \n  ##################################################################################################\n  \n  \n  \n  #################################################################################################\n  # f0\n  f0_1 = f_1\n  f0_2 = 0\n  \n  \n  for(i in 1:a){\n    f0_2 = f0_2 + (1/n[i])^2*1/(n[i]-1)*E2(i,V[[i]])\n  }\n  \n  f0=f0_1/f0_2\n  \n  ##################################################################################################\n  \n  # critical value\n  crit = qf(1-alpha,f,f0)\n  \n  # Test\n  \n  direct = direct.sum(1/n[1]*var(X[[1]]),1/n[2]*var(X[[2]]))\n  if(a>2){\n    for(i in 3:a) {\n      direct = direct.sum(direct, 1/n[i]*var(X[[i]]))\n    }\n  }\n  test = (t(X_bar)%*%K_B%*%X_bar)/matrix.trace(K_B%*%direct)\n  \n  return (1-pf(test,f,f0))\n}\n\n# Hypothesis 2 ------------------------------------------------------------\n\n\n\n\n\n\n\n\nH3 = function(n, a, d, X, alpha){\n  \n  f=0\n  f0=0\n  crit=0\n  test=0\n  \n  # creating X_bar (list with a entries)\n  X_bar = c(colMeans(X[[1]]))\n  for(i in 2:a){\n    X_bar = c(X_bar,colMeans(X[[i]]))\n  }\n  X_bar = as.matrix(X_bar)\n  \n  P_a = diag(a) - 1/a*(rep(1,a)%*%t(rep(1,a)))\n  P_d = diag(d) - 1/d*(rep(1,d)%*%t(rep(1,d)))\n  K_AB = kronecker(P_a,P_d)\n  \n  V = list(P_d%*%var(X[[1]]),P_d%*%var(X[[2]]))\n  if(a>2){\n    for(i in 3:a){\n      V[[i]] = (P_d%*%var(X[[i]]))\n    }\n  }\n  \n  #################################################################################################\n  # f\n  f_1 = 0\n  f_2 = 0\n  \n  \n  # phi = A\n  for(i in 1:a){\n    f_1 = f_1 + (1/n[i]*(1-1/a))^2*E1(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_1 = f_1 + 2*(1/n[i]*(1-1/a))*(1/n[j]*(1-1/a))*E3(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  for(i in 1:a){\n    f_2 = f_2 + (1/n[i]*(1-1/a))^2*E2(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_2 = f_2 + 2/(n[i]*n[j]*a^2)*E4(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  f=f_1/f_2\n  \n  \n  ##################################################################################################\n  \n  \n  \n  #################################################################################################\n  # f0\n  f0_1 = f_1\n  f0_2 = 0\n  \n  for(i in 1:a){\n    f0_2 = f0_2 + (1/n[i]*(1-1/a))^2*1/(n[i]-1)*E2(i,V[[i]])\n  }\n  \n  f0=f0_1/f0_2\n  \n  ##################################################################################################\n  \n  # critical value\n  crit = qf(1-alpha,f,f0)\n  \n  # Test\n  \n  direct = direct.sum(1/n[1]*var(X[[1]]),1/n[2]*var(X[[2]]))\n  if(a>2){\n    for(i in 3:a) {\n      direct = direct.sum(direct, 1/n[i]*var(X[[i]]))\n    }\n  }\n  test = (t(X_bar)%*%K_AB%*%X_bar)/matrix.trace(K_AB%*%direct)\n  \n  return (1-pf(test,f,f0))\n}\n\n# Hypothesis 3 ------------------------------------------------------------\n\n\n\n\n\n\n\nH4 = function(n, a, d, X, alpha){\n  \n  f=0\n  f0=0\n  crit=0\n  test=0\n  \n  # creating X_bar (list with a entries)\n  X_bar = c(colMeans(X[[1]]))\n  for(i in 2:a){\n    X_bar = c(X_bar,colMeans(X[[i]]))\n  }\n  X_bar = as.matrix(X_bar)\n  \n  I_d = diag(d)\n  P_a = diag(a) - 1/a*(rep(1,a)%*%t(rep(1,a)))\n  K_A_B = kronecker(P_a,I_d)\n  \n  V = list(var(X[[1]]),var(X[[2]]))\n  if(a>2){\n    for(i in 3:a){\n      V[[i]] = (var(X[[i]]))\n    }\n  }\n  \n  #################################################################################################\n  # f\n  f_1 = 0\n  f_2 = 0\n  \n  for(i in 1:a){\n    f_1 = f_1 + (1/n[i]*(1-1/a))^2*E1(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_1 = f_1 + 2*(1/n[i]*(1-1/a))*(1/n[j]*(1-1/a))*E3(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  for(i in 1:a){\n    f_2 = f_2 + (1/n[i]*(1-1/a))^2*E2(i,V[[i]])\n    j=i+1\n    while(j<=a){\n      f_2 = f_2 + 2/(n[i]*n[j]*a^2)*E4(V[[i]],V[[j]])\n      j=j+1\n    }\n  }\n  \n  f=f_1/f_2\n  \n  \n  ##################################################################################################\n  \n  \n  \n  #################################################################################################\n  # f0\n  f0_1 = f_1\n  f0_2 = 0\n  \n  \n  for(i in 1:a){\n    f0_2 = f0_2 + (1/n[i]*(1-1/a))^2*1/(n[i]-1)*E2(i,V[[i]])\n  }\n  \n  f0=f0_1/f0_2\n  \n  ##################################################################################################\n  \n  # critical value\n  crit = qf(1-alpha,f,f0)\n  \n  # Test\n  \n  direct = direct.sum(1/n[1]*var(X[[1]]),1/n[2]*var(X[[2]]))\n  if(a>2){\n    for(i in 3:a) {\n      direct = direct.sum(direct, 1/n[i]*var(X[[i]]))\n    }\n  }\n  test = (t(X_bar)%*%K_A_B%*%X_bar)/matrix.trace(K_A_B%*%direct)\n  \n  return (1-pf(test,f,f0))\n}\n\n# Hypotheses 4 ------------------------------------------------------------\n\n\n\n\n\n",
    "created" : 1405109246841.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "20|33|104|0|\n117|33|201|0|\n212|33|296|0|\n306|33|389|0|\n",
    "hash" : "3604984902",
    "id" : "ED01B70C",
    "lastKnownWriteTime" : 1405505627,
    "path" : "C:/Users/Martin/Dropbox/repeated measures/package/Repeated/R/Repeated.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}