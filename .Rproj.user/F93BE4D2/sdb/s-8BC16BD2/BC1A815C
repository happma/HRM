{
    "collab_server" : "",
    "contents" : "####################################################################################################################################\n### Filename:    utility.R\n### Description: trace estimator functions, dual empirical covariance matrix function and print/summary are defined here\n###              \n###\n###\n####################################################################################################################################\n\n\n#' Unbiased estimator\n#' \n#' @param i group index\n#' @param M a matrix\n#' @param n vector of sample size\n#' @keywords internal\n.E1 <- function(n,i, M) {\n  return ((n[i]*(n[i]-1))/((n[i]-2)*(n[i]+1))*(matrix.trace(M)^2-2/n[i]*matrix.trace(M%*%M)))\n}\n#' Unbiased estimator\n#' \n#' @param i group index\n#' @param M a matrix\n#' @param n vector of sample size\n#' @keywords internal\n.E2 <- function(n,i, M) {\n  return ((n[i]-1)^2/((n[i]-2)*(n[i]+1))*(matrix.trace(M%*%M)-1/(n[i]-1)*matrix.trace(M)^2))\n}\n#' Unbiased estimator\n#' \n#' @param i group index\n#' @param M a matrix\n#' @keywords internal\n.E3 <- function(M_i, M_j) {\n  return (matrix.trace(M_i)*matrix.trace(M_j))\n}\n#' Unbiased estimator\n#' \n#' @param i group index\n#' @param M a matrix\n#' @keywords internal\n.E4 <- function(M_i,M_j) {\n  return (matrix.trace(M_i%*%M_j))\n}\n\n\n#' Function for the output: significant p-values have on or more stars\n#' \n#' @param value p-value\n#' @keywords internal\n.hrm.sigcode <- function(value) {\n  \n  char <- \"\"\n  if(value <= 0.1 & value > 0.05) { char = \".\"}\n  if(value <= 0.05 & value > 0.01) {char = '*'}\n  if(value <= 0.01 & value > 0.001) {char = \"**\"}\n  if(value <= 0.001 & value >= 0) {char = \"***\"}\n  return (char)\n}\n\n#' @keywords export\nprint.HRM <- function(x, ...) {\n  if(!is.null(x$formula)) {\n    cat(\"Call:\", \"\\n\")\n    print(x$formula)\n    cat(\"\\n\")\n  }\n\n  print(x$result, row.names = FALSE)\n  cat(\"\\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\")\n}\n#' @keywords export\nsummary.HRM <- function(object, ...) {\n  cat(\"Summary:\\n\")\n  cat(\"\\n\")\n  if(!is.null(object$formula)) {\n    cat(\"Call:\", \"\\n\")\n    print(object$formula)\n    cat(\"\\n\")\n    cat(\"between-subject factors: \")\n    cat(object$factors[[1]], sep=\", \")\n    cat(\"\\n\")\n    cat(\"within-subject factors: \")\n    cat(object$factors[[2]], sep=\", \")\n    cat(\"\\n\")\n    cat(\"\\n\")\n  }\n  \n  print(object$result, row.names = FALSE)\n  cat(\"\\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\")\n}\n\n#' Function for the indentity matrix\n#' \n#' @param size dimension of the matrix\n#' @keywords internal\nI <- function(size){\n  return (diag(rep(1,size)))\n}\n#' Function for a matrix with entries 1\n#' \n#' @param size dimension of the matrix\n#' @keywords internal\n\nJ <- function(size){\n  return (rep(1,size)%*%t(rep(1,size)))\n}\n#' Function for the centering matrix\n#' \n#' @param size dimension of the matrix\n#' @keywords internal\nP <- function(size){\n  return (I(size)-J(size)*1/size)\n}\n\n#' Function for the dual empirical matrix\n#' \n#' @param Data data.frame\n#' @param B not used\n#' @keywords internal\nDualEmpirical <- function(Data, B){\n  n <- dim(Data)[1]\n  B <- B(dim(Data)[2]) # B = e.g. t(J_d)%*%J_d\n  return(1/(n-1)*P(n)%*%Data%*%B%*%t(Data)%*%P(n))\n}\n#' Function for the dual empirical matrix\n#' \n#' @param Data data.frame\n#' @param B part of the hypothesis matrix\n#' @keywords internal\nDualEmpirical2 <- function(Data, B){\n  n <- dim(Data)[1]\n  return(1/(n-1)*P(n)%*%Data%*%B%*%t(Data)%*%P(n))\n}",
    "created" : 1502216428449.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4044857765",
    "id" : "BC1A815C",
    "lastKnownWriteTime" : 1502216878,
    "last_content_update" : 1502216878464,
    "path" : "C:/Users/Martin/Dropbox/Masterarbeit/repeated measures/package/Repeated/R/utility.R",
    "project_path" : "R/utility.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}